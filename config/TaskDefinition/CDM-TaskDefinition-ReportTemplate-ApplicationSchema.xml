<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE TaskDefinition PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<TaskDefinition  executor="sailpoint.reporting.LiveReportExecutor" name="Application Schema - Report Template" progressMode="Percentage" resultAction="Rename" subType="Identity and User Reports" template="true" type="LiveReport">
  <Attributes>
    <Map>
      <entry key="report">
        <value>
          <LiveReport title="Application Schema Report Template">
          
            <DataSource objectType="Link" type="Filter">
              <QueryParameters>
                <Parameter argument="application" property="application.id"/>
              </QueryParameters>
            </DataSource>
            
            <ExtendedColumnScript>
             <Source> <![CDATA[
             	import java.util.List;
				import java.util.ArrayList;
                import sailpoint.reporting.*;
                import sailpoint.object.*;
                import sailpoint.api.SailPointContext;

                List newCols = new ArrayList();
                Map formValues = form.getFieldValues();
               	if (formValues != null && formValues.containsKey("application") && formValues.get("application") != null){
                	SailPointContext localSailPointContext = context;
                	String applicationId = formValues.get("application");
                
    				try {
      					List linkAttributes = new ArrayList();
      					Application app = (Application)context.getObject(Application.class, applicationId);
      					if (app != null) {
        					Schema schema = app.getSchema("account");
        					List attributes = schema.getAttributes();
        					for (AttributeDefinition attribute : attributes){
        					    String attrName = attribute.getName();
        					
        					    String columnHeader = attrName;
          						ReportColumnConfig conf = new ReportColumnConfig(app.getName() + "_" + attrName, columnHeader, "java.lang.String");
          						conf.setExtendedColumn(true);
                       			conf.setProperty("attributes." + attrName);
                       			
          						newCols.add(conf);
        					}
      					}
      					List localList1;
      					List localList2 = localList1 = newCols;
                		return localList1;
    				}
    				catch (Throwable localThrowable) {
      					throw localThrowable;
    				}
                }
                ]]>
                </Source>
            </ExtendedColumnScript>
            <ReportForm>
              <Reference class="sailpoint.object.Form"  name="Application Account Attributes Report Form"/>
            </ReportForm>
            <Columns>
              <ReportColumnConfig field="nativeIdentity" header="rept_user_details_col_identity" property="nativeIdentity" sortable="true" width="110"/>
              <ReportColumnConfig field="identityFirstname" header="rept_user_details_col_firstname" property="identity.firstname" sortable="true" width="110"/>
			  <ReportColumnConfig field="identityLastname" header="rept_user_details_col_lastname" property="identity.lastname" sortable="true" width="110"/>
              <ReportColumnConfig field="identityManager" header="rept_user_details_col_manager" property="identity.manager.displayName" sortable="true" width="110"/>
			  <ReportColumnConfig field="identityEmail" header="Email" property="identity.email" sortable="true" width="110"/>
			  <ReportColumnConfig field="identityStatus" header="User Status" property="identity.userStatus" sortable="true" width="110"/>
            </Columns>
          </LiveReport>
        </value>
      </entry>
    </Map>
  </Attributes>
  <Description>Displays attributes for all accounts on a given application
  </Description>
  <RequiredRights>
    <Reference class="sailpoint.object.SPRight" name="FullAccessUserReport"/>
  </RequiredRights>
  <Signature>
    <Inputs>
      <Argument name="application" required="true" type="Application">
        <Description>rept_account_attributes_app_desc</Description>
      </Argument>
    </Inputs>
  </Signature>
</TaskDefinition>

